// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id          String    @id @default(uuid())
  email       String    @unique
  name        String
  password    String
  projects    Project[] @relation("ProjectMembers")
  ownedProjects Project[] @relation("ProjectOwner")
  tasks       Task[]    @relation("TaskAssignee")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Project {
  id          String    @id @default(uuid())
  name        String
  description String?
  startDate   DateTime
  endDate     DateTime?
  owner       User      @relation("ProjectOwner", fields: [ownerId], references: [id])
  ownerId     String
  members     User[]    @relation("ProjectMembers")
  tasks       Task[]
  status      String    @default("active") // active, completed, on-hold, cancelled
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Task {
  id          String    @id @default(uuid())
  title       String
  description String?
  project     Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId   String
  assignee    User?     @relation("TaskAssignee", fields: [assigneeId], references: [id])
  assigneeId  String?
  status      String    @default("todo") // todo, in-progress, done
  priority    String    @default("medium") // low, medium, high
  startDate   DateTime?
  dueDate     DateTime?
  order       Int       @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
